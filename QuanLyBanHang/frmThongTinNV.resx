<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7u7MD+Xtx4Dm7ce25uzHo+ju
        xSwAAAAA7e3IDv///wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5ubMCubtx9nm7cf/5u3H/+bt
        x//m7cf1vcW24MnQwf/Z49Tln6ash9XVvwwAAAAAAAAAAAAAAAAAAAAAAAAAAObsx27EzLX/cYSb/2Z4
        lP9meJT/ZHWQ/5qmtf/p9vj/7/z9/8bR0P/e5cPr5+3IKgAAAAAAAAAAAAAAAObsxynn7ce8p7Kp/2uB
        pf9lep3/bYSo/2+Gqv97lrz/iJix/5uosv/Y38P/5+7K/+fvyYAAAAAAAAAAAOfryEHm7cf75u3H/6ey
        qf9tg6b/YHOW/2d6nf93kbX/fJe9/3aOtP+Mm6T/6vDR/+/z2v73+e1+////EP///wHv9Nqf7vPa/+3y
        1/+nsqn/cIas/3qTuf+Jlar/jJms/3CFrf9ld6n/jp2m/+btx//m7cf/6urKGAAAAAAAAAAA6OzHN+jw
        zvjn7sn/laKl/3iTt/94k7f/eJO3/3KLrv9yirL/ZHSr/36PpP/m7cf/5u3H/+ftyCoAAAAAAAAAAAAA
        AADm7sQe5uzH+JOouf+kzPb/pMz2/6TM9v+kzPb/pMz2/6TM9v+Kp8n/5u3H/+btxrkAAAAAAAAAAAAA
        AAAAAAAAdnyPKcrU1uaMnrP/iqTE/4ukxf+IocL/i6TA/42lwf+NpcH/fZCm/+fsx7Lf378IAAAAAAAA
        AAAAAAAAAAAAAG1thhW1wsu7zdnf/ez5+v/s+vv/wcrG/+LpxP/m7cf/5u3H/+btx//l7cZjAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMzMzBYuQoWfI0tfMoampmtngwfvm7cf/5u3H/+btx//m7cfJ///MBQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm68k05e3Hn+Xsx7Pm7MZ539+/CAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA+P8AAPAHAADwAwAA4AEAAMADAACAAwAAwAMAAOAD
        AADgBwAA4A8AAPgPAAD/PwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///MBebvxT7l7Mdt5e7Hd+XtxmLi68QaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXtyEXm7cbd5u3H/+btx//m7cf/5u3H/+btx/vn7cid5vLMFAAA
        AAD///8B5+3KK+juxi3j48YJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm7cdl5u3H/Obtx//m7cf/5u3H/+btx//m7cf/5u3H/+bt
        x//m7cfa6O7GTObsx87m7cf/5u3H/+btx+jn7chUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5e3GOubtx/zm7cf/5u3H/+btx//m7cf/5u3H/+bt
        x//m7cf/5u3H/+btx/+lrKn/rLS5/6y0uf/Ays3/1+Lk/8zX2/+nrrjqlJqlzbvBqCkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADl7ca95u3H/8XNs/9qdYb/a3mP/2t5
        j/9reY//a3mP/2t5j/9reY//aXaN/6Grt//v/P3/7/z9/+/8/f/v/P3/7/z9/+Tw8//K19v/y9G2/+bt
        x67u7swPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6OjFFubtx/3m7cf/eIGL/3WN
        s/9abI3/YXOW/2Fzlv9hc5b/YXOW/1ZmiP9hc5b/ZHGO/4yVp//S3+P/7/z9/+/8/f/v/P3/1d/k/5KZ
        lP/m7cf/5u3H/+btx5wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADl7cY65u3H/+bt
        x/90fov/YHKV/2yCpv9hc5b/YXOW/2Fzlv95k7n/YXSX/3yXvf98l73/eZK4/2p5lv/o9ff/0Nzi/46V
        nv+fpab/3+bC/+btx//m7cf/5u3H9P//qgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADn78cg5u3Hm+bt
        x9fm7cf/5u3H/3R+i/9hdJf/fJe9/2R3m/98l73/ZHeb/3yXvf9hdJf/fJe9/3yXvf98l73/epS7/2d0
        kf9te5n/nKOa/+btx//m7cf/5u3H/+zx1P/n7cn/5vLMFAAAAAAAAAAAAAAAAAAAAAAAAAAA5uvJNObt
        x/Lm7cf/5u3H/+btx//m7cf/dH6L/2F0l/9wh6z/SVV0/2yCp/9LVnf/fJe9/2Z8n/98l73/fJe9/3yX
        vf98l73/eZK3/3OLsP+co5r/5+7J/+/z2v/t8tf/7vPY//L14Of///9j////Uf///wEAAAAAAAAAAAAA
        AADm7sfN5u3H/+btx//m7cf/5u3H/+btx/90fov/YXSX/3qUu/9bbY//eJK3/15wkv98l73/fJe9/3yX
        vf98l73/fJe9/3yXvf9pfaL/bYWp/5yjmv/n7sn/6e/O/+nvzv/w9N38+fvwiP///w8AAAAAAAAAAAAA
        AAAAAAAA6+vEDebtx/3q8M//6e/O/+btx//m7cf/5u3H/3R+i/9hdJf/fJe9/3yXvf95k7n/f4+m/4ST
        qv+Ek6r/gpCo/3iRtf97lrv/fJe9/3qUuv9zjLH/nKOa/+btx//m7cf/5u3H/+btx//m7MYoAAAAAAAA
        AAAAAAAAAAAAAP///wH///1n8fXg/fH14P/y9eH/8vXh//T35v/m7cf/dH6L/2R3m/98l73/fJe9/3WN
        sf+bp7X/r7rG/666xv+lscD/coeq/1hllP9OUZP/WGaV/3OMsf+co5r/5u3H/+btx//m7cf/5u3H/+bt
        x2QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm7ca06vDP/+7z2v/p783/5u3H/+btx/90fov/fJe9/3yX
        vf98l73/fJe9/3yXvf98l73/Y3WY/3yXvf98l73/W2af/0k5wf9ZZpv/c4yx/5yjmv/m7cf/5u3H/+bt
        x//m7cf/5ezGbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAObvxR/m7cjY5+7K/+nvzf/m7cf/1929/1tp
        hf9me57/Znue/2Z7nv9me57/Znue/2Z7nv9me57/Znue/2Z7nv9leZz/YXWY/2V5nf9me57/a3aG/+bt
        x//m7cf/5u3H/+btx//n68hBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAObmzArn7chz5u3H/+bt
        x/+hqKD/lLjf/6TM9v+kzPb/pMz2/6TM9v+kzPb/pMz2/6TM9v+kzPb/pMz2/6TM9v+kzPb/pMz2/6TM
        9v9rfpr/5u3H/+btx//m7cf/5u3G1P///wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANX/
        1Qbm7cfu5u3H/5yknv+Zvub/pMz2/6TM9v+kzPb/pMz2/6TM9v+kzPb/pMz2/6TM9v+kzPb/pMz2/6TM
        9v+kzPb/pMz2/3SHof/m7cf/5u3H/+btyO/m68cyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAR1JmGaClq9Srs7X/fIST/5m+5v+kzPb/pMz2/6TM9v+kzPb/pMz2/6TM9v+kzPb/pMz2/6TM
        9v+kzPb/pMz2/6TM9v+kzPb/dIeh/+btx//n7sex4+rIJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB4gJCK7/z9/97q7f+0wMr/dYWg/3qLpv96i6b/eoum/3qLpv96i6b/d4ej/29+
        lf94iJv/eIib/3iIm/94iJv/eIib/3iIm/9ncIH/5u3H/+fsxTUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGdsgWHW4uf12eXp/8bS1//b5ur/7/z9/+/8/f/v/P3/4/Dy/+Pv
        8f+3wMT/0da5/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf57e3IDgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRXbUaOlaTH2eXo/b7Iz/re6u3/7/z9/+/8
        /f/v/P3/pq+2/87Vuf/m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+buxrAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzVQ9TVm1No6233O/8
        /f/s+fr/dXuNzauzuPyutar/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf35+3KKwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABudYhtp6+6yYCFlqwzM00K5OzGQ+btx/Tm7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H+eXu
        yFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6O7GLeftyMbm7cf/5u3H/+btx//m7cf/5u3H/+bt
        x8nk7cU5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAObryDPm7Mdu5e7Hd+bu
        x2jj7sguAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////8B///+AIf//AAA//gAAD/4A
        AAf+AAAH+AAAB/AAAAfgAAAH4AAAD+AAAA/gAAAP8AAAD/wAAA/8AAAf/AAAP/gAAH/8AAB//gAAf/+A
        AP//zAH///4D////////////////////////////
</value>
  </data>
</root>